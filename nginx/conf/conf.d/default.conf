server {
    # 监听端口，可以同时监听多个端口
    listen       80;
    listen  [::]:80;
    # 服务名称，可以是域名或者IP
    server_name  localhost;
    # 单次连接请求的最大次数，超过这个次数，连接会被关闭并重新建立
    keepalive_requests 100;

    #access_log  /var/log/nginx/host.access.log  main;

    # 配置请求的路由，以及各种页面的处理情况。一个 server 可以有多个 location 路由。
    # 
    # 1. location =    # 精准匹配
    # 2. location ^~   # 带参前缀匹配
    # 3. location ~    # 正则匹配（区分大小写）
    # 4. location ~*   # 正则匹配（不区分大小写）
    # 5. location /a   # 普通前缀匹配，优先级低于带参数前缀匹配。
    # 6. location /    # 任何没有匹配成功的，都会匹配这里处理
    location / {
        # 静态资源根目录
        root   /usr/share/nginx/html;
        # 默认文件
        index  index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    # 精准匹配，匹配成功后不再匹配其他规则
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # 转到 /test 的请求，转发到 http://test
    location /test {
        # 动态请求，代理服务器地址
        proxy_pass http://test
        # 拒绝访问的IP
        # deny 127.0.0.1;
        # 允许访问的IP
        # allow 127.0.0.1;
    }

    location ^~ /voice-call {
        proxy_pass http://localhost:8095;
        proxy_set_header Host http://localhost:8095;
        # 设置客户端真实IP
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    # 正则匹配，区分大小写
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

